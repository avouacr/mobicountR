import struct
import xml.etree.ElementTree as etree 
import numpy as np
import os




def dma_to_rows(dmafile) :
    
    with open(dmafile, 'rb') as f :
        dma = f.read()
        
    dma_name = os.path.split(os.path.abspath(dmafile))[1].split(".")[0]

    dmabin_ind = dma.index(b'\n\x00')+2
    dmabin = dma[dmabin_ind:-4]
    dmaxml = dma[:dmabin_ind-2]

    root = etree.fromstring(dmaxml)

    X0 = int(root.find("Theme/Tuile/X0").text)
    Y0 = int(root.find("Theme/Tuile/Y0").text)

    Nx = int(root.find("Theme/Tuile/Nx").text)
    Ny = int(root.find("Theme/Tuile/Ny").text)

    fmt = '>' + str(Nx*Ny) + 'f'
    dmadata = struct.unpack(fmt, dmabin)

    ind = Nx * Ny
    
    res_complete = []
    
    for i in range(Ny) :
        dd = np.array([0 if d<1e-3 else d for d in dmadata[ind-Nx : ind]])
        y_row = Y0 + (Ny-i)*100
        ind_nonzero = np.nonzero(dd)[0]
        
        if len(ind_nonzero) != 0 :
            prob_list = list(dd[ind_nonzero])
            x_list = [X0 + x*100 for x in ind_nonzero]
            res_list = [[dma_name, str(x_list[j]), str(y_row), str(round(prob_list[j], 4))] for j in range(len(ind_nonzero))]
            res_complete.append(res_list)
        
        ind -= Nx
        
    res_complete = [item for sublist in res_complete for item in sublist]
    res_final = [",".join(x) for x in res_complete]

    return res_final





def all_dma_to_csv(dma_dir, outfile_path) :
    
    dma_paths = [dma_dir + "/" + x for x in os.listdir(dma_dir)]
    
    with open(outfile_path, "w") as f :
        f.write("dma_name" + "," + "x_tile" + "," + "y_tile" + "," + "proba" + "\n")
    
        for i in range(len(dma_paths)) :
            rows_dma = dma_to_rows(dma_paths[i])
            for x in rows_dma :
                f.write(x + "\n")
            
    return(True)
    

    
    
dma_dir_indoor = "P:/CSG100m_2019-02_2G3G4G/Usage_Indoor/data_unzip"
dma_dir_outdoor = "P:/CSG100m_2019-02_2G3G4G/Usage_Outdoor/data_unzip"
dir_output = "C:/Users/vblx1269/Documents/Romain/present_population/2_cancan/exploitation_cov_maps_fv/output/"

all_dma_to_csv(dma_dir_indoor,
               dir_output + "fv_csg_indoor_02_2019.csv")

all_dma_to_csv(dma_dir_outdoor,
               dir_output + "fv_csg_outdoor_02_2019.csv")
    


